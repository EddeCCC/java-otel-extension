/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/8.1.1/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'java'

    id "com.palantir.docker" version "0.36.0"
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.1'

    // to use @AutoService
    compileOnly 'com.google.auto.service:auto-service:1.1.1'
    annotationProcessor 'com.google.auto.service:auto-service:1.1.1'

    // write InstrumentationModule
    compileOnly("io.opentelemetry.javaagent:opentelemetry-javaagent-extension-api:1.31.0-alpha")

    //write AgentExtension
    compileOnly("io.opentelemetry.javaagent:opentelemetry-javaagent-tooling:1.31.0-alpha")
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

dockerPrepare.dependsOn(jar)

docker {
    Provider<Directory> extensionJar = layout.buildDirectory.dir("/libs/example-module.jar")

    name "nteduardschander/java-otel-extension"
    tag 'versioned', "hub.docker.com/${name}:${version}"
    dockerfile file('docker/Dockerfile')
    files extensionJar.get().asFile
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
